---
- name: create_ocp_nodes
  hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - cfg/secrets_{{sysctx_instance_name}}.yml
    - cfg/stormshift.yml

  vars:
    engine_user: admin@internal
    engine_password: "{{secret_password}}"
    engine_url: https://{{layer2_rhev_engine_fqdn}}/ovirt-engine/api
#    engine_fqdn: ovirt-engine.example.com
    wait_for_ip: true
    debug_vm_create: true
    std_gateway: "{{layer3_ocp_network_prefix}}.1"
#    local_domain: "{{sysctx_dns_domain }}"

# this role actually creates the VMs:
# Checkout variable "vm" in cfg/ocp(1-5).yml, esp. "profiles" and "vms
# they define what the vm-infra role will create here:
  roles:
    - ovirt.vm-infra
  tags:
    - vms

- name: Configure DNS
  hosts: layer1
  vars_files:
    - cfg/secrets_{{sysctx_instance_name}}.yml
    - cfg/stormshift.yml

  tasks:
    - name: Add DNS entries
      tags: dns
      blockinfile:
        path: /etc/named/{{ sysctx_dns_domain }}.zone
        marker: "; {mark} ANSIBLE MANAGED BLOCK {{layer3_ocp_name}}"
        block: |
          master.{{layer3_ocp_name}} IN A {{layer3_ocp_bastion_ip}}
          *.apps.{{layer3_ocp_name}} IN A {{layer3_ocp_bastion_ip}}
          {{layer3_ocp_name}}bastion IN A {{layer3_ocp_bastion_ip}}
          {{layer3_ocp_name}}master1 IN A {{layer3_ocp_network_prefix}}.11
          {{layer3_ocp_name}}master2 IN A {{layer3_ocp_network_prefix}}.12
          {{layer3_ocp_name}}master3 IN A {{layer3_ocp_network_prefix}}.13
          {{layer3_ocp_name}}inf1 IN A {{layer3_ocp_network_prefix}}.21
          {{layer3_ocp_name}}inf2 IN A {{layer3_ocp_network_prefix}}.22
          {{layer3_ocp_name}}inf3 IN A {{layer3_ocp_network_prefix}}.23
          {{layer3_ocp_name}}app1 IN A {{layer3_ocp_network_prefix}}.31
          {{layer3_ocp_name}}app2 IN A {{layer3_ocp_network_prefix}}.32
          {{layer3_ocp_name}}app3 IN A {{layer3_ocp_network_prefix}}.33
          {{layer3_ocp_name}}app4 IN A {{layer3_ocp_network_prefix}}.34
      register: dns

    - name: Restart DNS
      tags: dns
      service:
        name: named
        enabled: yes
        state: restarted
      when: dns is changed

- name: Configure Bastion
  hosts: "{{layer3_ocp_name}}bastion.stormshift.coe.muc.redhat.com"
  vars_files:
    - cfg/secrets_{{sysctx_instance_name}}.yml
    - cfg/stormshift.yml
  tasks:
    - name: Install netcat
      tags: bastion,slow
      yum:
        name: "nmap-ncat"
        state: latest

    - name: Enable IP Forwarding
      tags: bastion,firewall
      sysctl:
        name: net.ipv4.ip_forward
        value: 1
        sysctl_set: yes
        reload: yes


    - name: Install iptables
      tags: bastion,firewall,slow
      yum:
        name: "iptables-services"
        state: latest
      when: useFirewalld is not defined

    - name: Start iptables
      tags: bastion,firewall
      service: name=iptables enabled=yes state=started
      when: useFirewalld is not defined

#iptables -F
    - name: Flush all rules
      tags: bastion,firewall
      iptables:
        flush: true
      when: useFirewalld is not defined

#iptables -t nat -A POSTROUTING ! -d 172.16.10.0/24  -o eth0 -j SNAT --to-source 10.32.105.71
#iptables ! -d 172.16.10.0/24
    - name: Add SNAT from internal net to bastion host ip
      tags: bastion,firewall
      iptables:
        state: present
        table: nat
        chain: POSTROUTING
        destination: "!{{layer3_ocp_network_prefix}}.0/24"
        out_interface: eth0
        jump: SNAT
        to_source: "{{layer3_ocp_bastion_ip}}"
      register: iptables
      when: useFirewalld is not defined

    - name: Save iptables
      tags: bastion,firewall
      command: "service iptables save"
      when: iptables is changed and useFirewalld is not defined

# Firewalld currently not supported/used by OpenShift
# So this is all masked as useFirewalld is not defined
    - name: Install firewall
      tags: bastion,firewall, slow
      yum:
        name: "firewalld"
        state: latest
      when: useFirewalld is defined

    - name: Start firewall
      tags: bastion,firewall
      service: name=firewalld enabled=yes state=started
      when: useFirewalld is defined

    - name: add eth0 to external zone
      tags: bastion,firewall
      firewalld: immediate=yes permanent=yes state=enabled zone=external interface=eth0
      when: useFirewalld is defined

    - name: add eth1 to internal zone
      tags: bastion,firewall
      firewalld: immediate=yes permanent=yes state=enabled zone=internal interface=eth1
      when: useFirewalld is defined

    - name: add masquerade to external zone
      tags: bastion,firewall
      firewalld: immediate=yes permanent=yes state=enabled zone=external masquerade=yes
      when: useFirewalld is defined

    - name: add passthrough to eth0
      tags: bastion,firewall
      shell: "firewall-cmd --permanent --direct --passthrough ipv4 -t nat -I POSTROUTING -o eth0 -j MASQUERADE -s {{layer3_ocp_network_prefix}}.0/24"
      register: fwresult
      changed_when: "fwresult.stderr is not search('ALREADY_ENABLED')"
      when: useFirewalld is defined

    - name: Open Service Ports
      tags: bastion,firewall
      firewalld: immediate=yes permanent=yes state=enabled zone=internal service="{{ item}}"
      with_items:
        - dhcp
        - tftp
        - dns
        - http
        - https
        - nfs
        - ssh
      when: useFirewalld is defined

    - name: Add Domain to resolv.conf
      tags: bastion,dns
      lineinfile:
        line: "search {{sysctx_dns_domain}}"
        insertbefore: "^nameserver"
        path: /etc/resolv.conf

    - name: Remove cloud init
      tags: bastion,slow
      yum: name="cloud-init" state=absent

# TODO: Deployment breaks here with "host unreachable" - understand why and FIX
    - name: Copy SSH Keys to bastion
      tags: bastion,misc
      copy:
        src: /root/.ssh/{{ item}}
        mode: preserve
        dest: /root/.ssh/
      with_items:
        - id_rsa
        - id_rsa.pub
        - config

- name: Prepare RHEL
  hosts: "{{layer3_ocp_name}}nodes"
  vars_files:
    - cfg/secrets_{{sysctx_instance_name}}.yml
    - cfg/stormshift.yml
  tasks:
    - name: Remove cloud init as workaround RHEV bug
      tags: rhel
      yum: name="cloud-init" state=absent

- name: SRIO passthrough NVMEs to Infra Nodes
  hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - cfg/secrets_{{sysctx_instance_name}}.yml
    - cfg/stormshift.yml
  tasks:
    - name: SRIO passthrough NVMEs to Infra Nodes
      block:
        - name: Login into RHEV
          tags: passthrough
          ovirt_auth:
           url: "{{layer2_rhev_engine_url}}"
           username: "{{layer2_rhev_engine_user}}"
           password: "{{ layer2_rhev_engine_password }}"

        - name: Shutdown virtual machine
          tags: passthrough
          ovirt_vm:
            auth: "{{ ovirt_auth }}"
            name: "{{ item.vm }}"
            state: stopped
          with_items: "{{layer3_ocp_ocs_device_mapping}}"
          changed_when: false

        - name: Attach host devices to virtual machine
          tags: passthrough
          ovirt_vm:
            auth: "{{ ovirt_auth }}"
            name: "{{ item.vm }}"
            host: "{{layer1_host_fqdn}}"
            placement_policy: pinned
            host_devices:
              - name: "{{ item.device }}"
                state: present
          with_items: "{{layer3_ocp_ocs_device_mapping}}"

        - name: Start virtual machine
          tags: passthrough
          ovirt_vm:
            auth: "{{ ovirt_auth }}"
            name: "{{ item.vm }}"
            state: running
          with_items: "{{layer3_ocp_ocs_device_mapping}}"
          changed_when: false

        - name: Logoff from RHEV
          tags: always
          ovirt_auth:
            state: absent
            ovirt_auth: "{{ ovirt_auth }}"
      when: layer3_ocp_ocs_device_mapping is defined
