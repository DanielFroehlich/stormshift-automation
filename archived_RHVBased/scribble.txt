TMUX:
CTRL-B : setw -g mode-mouse on

Kernel Cmd:
intel_iommu=on
sriov



# Run CMD from master against all nodes:
ansible -i stc-git/inventory -a "rm /usr/lib/tmpfiles.d/cleanup-cni.conf" nodes

# Re-Install Logging:
ansible-playbook -i /etc/ansible/hosts -e openshift_logging_install_logging=false /usr/share/ansible/openshift-ansible/playbooks/openshift-logging/config.yml

# Re-Install Monitoring:
ansible-playbook -i /etc/ansible/hosts -e openshift_cluster_monitoring_operator_install=true /usr/share/ansible/openshift-ansible/playbooks/openshift-monitoring/config.yml

# Fix Docker Storage / Disk Full:
NODE=ocp3app1.stormshift.coe.muc.redhat.com
oc adm manage-node $NODE --schedulable=false
oc adm drain $NODE --grace-period=10 --timeout=60s --delete-local-data --ignore-daemonsets

# On Node:
systemctl stop docker
#(Contetnt from template/docker-storage-setup):
vi /etc/sysconfig/docker-storage-setup
docker-storage-setup
rm -Rf /var/lib/docker/*
reboot


# -------------------------------------------
# ------------------ OCP4 Rollout
# -------------------------------------------

# -------------------------------------------
# Pre-Reqs (Ask Daniel F.):
- SSH Access to hailstorm@hailstormdeploy.coe.muc.redhat.com
- User+Pswd for RHEV Console

# -------------------------------------------
# Step 0: Cleanup
1. Manually delete all exitings VMS for this Cluster in RHEV.
Be sure to include the disks.

2. remove the host keys for ocp2.... from hailstorm@hailstormdeploy:~/.ssh/known_hosts
[hailstorm@hailstormdeploy stormshift]$ vi ~/.ssh/known_hosts




# -------------------------------------------
# Step 1: Create the RHEV Network manually
Log on to RHEV Console (https://rhev.stormshift.coe.muc.redhat.com)
Navigate to Network -> New
name: ocpXXX-network
mtu: custom: 1442
Create on external Provider: true
External Provider = ovirt-provider-ovn
Network port security = DISABLED


# -------------------------------------------
# Step 2: Provision the Infrastructure using Ansible Playbook 340_ocp4_provision_infrastructure.yml
# (Takes roughly  10 Minutes)
# 11:08 -
ssh hailstorm@hailstormdeploy.coe.muc.redhat.com

# Use tmux to avoid issue in case of loss of signal:
[hailstorm@hailstormdeploy ~]$ tmux

#(use tmux attach-session -t 0 to return to your session)

[hailstorm@hailstormdeploy ~]$ cd stormshift
[hailstorm@hailstormdeploy stormshift]$ ansible-playbook -i cfg/inventory.yml -e @cfg/ocp3.yml 340_ocp4_provision_infrastructure.yml

# If something fails, fix the issue and re-run.
# To speed things up, you can start with the failed task, e.g
[hailstorm@hailstormdeploy stormshift]$ ansible-playbook -i cfg/inventory.yml -e @cfg/ocp3.yml 340_ocp4_provision_infrastructure.yml --start-at-task "Install packages"

# -------------------------------------------
# Step 3: Install OpenShift
# (Takes roughly 30 minutes)
# 11:20
ansible-playbook -i cfg/inventory.yml -e @cfg/ocp2.yml 350_ocp4_install.yml

# -------------------------------------------
# Step 4: Configure OpenShift
# (Takes roughly 2 minutes to run, but wait 5 minutes for all changes
# to be picked up by operators)
ansible-playbook -i cfg/inventory.yml -e @cfg/ocp2.yml 360_ocp4_postinstall.yml



#
#route add -net 0.0.0.0 gw 172.16.10.1
# route del -net 0.0.0.0 gw 172.16.10.1
#  route -n
