---
- name: Install OpenShift
  hosts: "{{layer3_ocp_name}}bastion"
  gather_facts: false
  vars_files:
    - cfg/secrets_{{sysctx_instance_name}}.yml
    - cfg/stormshift.yml
  tasks:
# See issue https://github.com/RedHat-EMEA-SSA-Team/stc/issues/86
    - name: Run STC validate playbook
      tags: pre,stc,validate
      command: 'ansible-playbook -e sudo_password="" /root/stc-git/playbooks/validate_config.yml'

    - name: Run STC prepare ssh playbook
      tags: pre,stc,ssh
      command: 'ansible-playbook -i /root/stc-git/inventory /root/stc-git/playbooks/prepare_ssh.yml'

    - name: Add stormshift server certs to inventory
      tags: pre,certs
      blockinfile:
        path: /root/stc-git/inventory
        block: |
          openshift_master_named_certificates=[{"certfile": "/root/certs/stormshift.crt", "keyfile": "/root/certs/stormshift.key", "cafile": "/root/certs/redhat-pki-ca-chain.crt"}]
          openshift_hosted_router_certificate={"certfile": "/root/certs/stormshift.crt", "keyfile": "/root/certs/stormshift.key", "cafile": "/root/certs/redhat-pki-ca-chain.crt"}
        insertafter: openshift_master_overwrite_named_certificates=true

    - name: Copy stc inventory to ansible hosts
      tags: pre,certs
      copy:
        src: /root/stc-git/inventory
        dest: /etc/ansible/hosts
        remote_src: yes

    - name: Run ocp prerequisites playbook (Coffe time again)
      tags: inst,prereq
      command: ansible-playbook /usr/share/ansible/openshift-ansible/playbooks/prerequisites.yml

    - name: Run ocp deploy cluster  playbook (MUCH more coffeeeee time)
      tags: inst,deploy
      command: ansible-playbook /usr/share/ansible/openshift-ansible/playbooks/deploy_cluster.yml

# Start actual deployment (runs roughly one hour)
# cd $WORK_DIR
#

# Change admin pswd
# ansible -i inventory  masters -m command -a 'htpasswd -b /etc/origin/master/htpasswd admin XXX'

# Ensure admin user has cluster-admin role:
#ansible masters -l master01 -m command -a 'oc adm policy add-cluster-role-to-user cluster-admin admin'
#ansible masters -l ocp1master2.stormshift.coe.muc.redhat.com  -m command -a 'oc adm policy add-cluster-role-to-user cluster-admin admin'
    - name: Add ocp apps to haproxy config
      tags: post,haproxy
      blockinfile:
        path: /etc/haproxy/haproxy.cfg
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{layer3_ocp_name}}"
        block: |
          frontend openshift-apps-https
              bind *:443
              default_backend openshift-apps-https
              mode tcp
              option tcplog
          backend openshift-apps-https
              balance source
              mode tcp
              server      infra0 {{layer3_ocp_network_prefix}}.21:443 check
              server      infra1 {{layer3_ocp_network_prefix}}.22:443 check
              server      infra2 {{layer3_ocp_network_prefix}}.23:443 check
          frontend openshift-apps-http
              bind *:80
              default_backend openshift-apps-http
              mode tcp
              option tcplog
          backend openshift-apps-http
              balance source
              mode tcp
              server      infra0 {{layer3_ocp_network_prefix}}.21:80 check
              server      infra1 {{layer3_ocp_network_prefix}}.22:80 check
              server      infra2 {{layer3_ocp_network_prefix}}.23:80 check
      register: haxproxy

    - name: Restart haproxy
      tags: post,haproxy
      service: name=haproxy enabled=yes state=restarted
      when: haxproxy is changed


# Use Red Hat Internal SSO as Identity Provider
# https://mojo.redhat.com/community/communities-at-red-hat/applications/containers-paas-community/blog/2019/03/13/google-oauth-as-identity-provider-with-red-hat-login-in-ocp-311
- name: Configure RedHatInternalSSO as Auth Provider
  hosts: "{{layer3_ocp_name}}masters"
  gather_facts: false
  vars_files:
    - cfg/secrets_{{sysctx_instance_name}}.yml
    - cfg/stormshift.yml

  tasks:
    - name: Add GoogleIdentityProvider to master config
      tags: post,sso
      blockinfile:
        path: /etc/origin/master/master-config.yaml
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{layer3_ocp_name}}"
        insertafter: identityProviders
        block: |
          # GoogleIdentityProvider for Red Hat INTERNAL SSO
            - name: RedHatInternalSSO
              challenge: false
              login: true
              mappingMethod: claim
              provider:
                 apiVersion: v1
                 kind: GoogleIdentityProvider
                 clientID: "{{sysctx_google_auth_client_id}}"
                 clientSecret: "{{sysctx_google_auth_client_secret}}"
                 hostedDomain: "redhat.com"
      register: cfg1

    - name: Rename htpasswd_auth to Internal
      tags: post,sso
      replace:
        path: /etc/origin/master/master-config.yaml
        regexp:  "^    name: htpasswd_auth"
        replace: "    name: Internal"
      register: cfg2

    - name: Restart Master
      tags: post,sso
      block:
        - name: Restart API
          tags: post,sso
          command: master-restart api
          changed_when: false

        - name: Restart Controllers
          tags: post,sso
          command: master-restart controllers
          changed_when: false

        - name: Wait for master to be online again
          tags: post,sso
          wait_for:
            host: localhost
            port: 8443
      when: cfg1 is changed or cfg2 is changed

    - name: Add admins to htpaswd
      tags: post,admin
      htpasswd:
        path: /etc/origin/master/htpasswd
        name: "{{item}}"
        password: "{{secret_password}}"
      with_items: "{{layer3_ocp_admin_users}}"
      register: adminusers

    - name: Add admins to cluster-admin role
      tags: post,admin
      command: "oc adm policy add-cluster-role-to-user cluster-admin {{item}}"
      with_items: "{{layer3_ocp_admin_users}}"
      when: adminusers is changed


# TODO: Create groups / roles
# oc adm groups new admins
# oc adm policy add-cluster-role-to-group cluster-admin admins
# oc adm groups add-users admins dfroehli@redhat.com


#https://docs.openshift.com/container-platform/3.11/admin_guide/overcommit.html#disabling-swap-memory
- name: Disable swap
  hosts: "{{layer3_ocp_name}}nodes"
  gather_facts: true
  vars_files:
    - cfg/secrets_{{sysctx_instance_name}}.yml
    - cfg/stormshift.yml
  tasks:
    - name: Disable swap
      tags: post,swap
      command: swapoff --all
      when: ansible_swaptotal_mb > 0

- name: Workaround BZ#1654044 - CrashLoopBackOff after rolling reboot - needed for OCP <=V3.11.98
  hosts: "{{layer3_ocp_name}}nodes"
  gather_facts: false
  vars_files:
    - cfg/secrets_{{sysctx_instance_name}}.yml
    - cfg/stormshift.yml
  tasks:
    - name: Workaround BZ#1654044 - CrashLoopBackOff after rolling reboot
      tags: post, BZ1654044
      blockinfile:
        block: |
          r /etc/cni/net.d/80-openshift-network.conf
          r /etc/origin/openvswitch/conf.db
        path: /usr/lib/tmpfiles.d/cleanup-cni.conf
        create: yes

# See https://blog.openshift.com/automatically-update-red-hat-container-images-on-openshift-3-11/
- name: Configure Auto Image Update Master Part
  hosts: "{{layer3_ocp_name}}masters"
  gather_facts: false
  vars_files:
    - cfg/secrets_{{sysctx_instance_name}}.yml
    - cfg/stormshift.yml

  tasks:
    - name: Configure imagePolicyConfig in the Master Config
      tags: post,autoimg,master
      blockinfile:
        path: /etc/origin/master/master-config.yaml
        marker: "# {mark} ANSIBLE MANAGED BLOCK IMGPLCY {{layer3_ocp_name}}"
        insertafter: imagePolicyConfig
        block: |
          # Configure Auto Image Update
            MaxScheduledImageImportsPerMinute: 1
            ScheduledImageImportMinimumIntervalSeconds: 1800
            disableScheduledImport: false
            maxImagesBulkImportedPerRepository: 5
      register: cfg1

    - name: Restart Master
      tags: post,autoimg,master
      block:
        - name: Restart API
          tags: post,sso
          command: master-restart api
          changed_when: false

        - name: Restart Controllers
          tags: post,sso
          command: master-restart controllers
          changed_when: false

        - name: Wait for master to be online again
          tags: post,sso
          wait_for:
            host: localhost
            port: 8443
      when: cfg1 is changed

- name: Configure Auto Image Update ImageStream Part
  hosts: localhost
  gather_facts: false
  vars_files:
    - cfg/secrets_{{sysctx_instance_name}}.yml
    - cfg/stormshift.yml
  tasks:
    - name: Configure image streams
      tags: post,autoimg,imgstream
      shell: |
        oc get is -n openshift -o json > openshift-is.json
        jq '.items[].spec.tags[]? |= if .from.kind == "DockerImage" then .importPolicy.scheduled |= true else . end' openshift-is.json > openshift-is-scheduled.json
        oc apply -f openshift-is-scheduled.json -n openshift
      args:
        creates: openshift-is.json
