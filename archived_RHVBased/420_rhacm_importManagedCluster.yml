---
# ------------------------------------------------------------------------------
# This import a cluster (like ocp1-4) as managed cluster into rhacm
# See
# https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.1/html-single/manage_cluster/index#importing-a-managed-cluster-with-the-cli


- name: Import OCP cluster as managed cluster into rhacm
  hosts: localhost
  gather_facts: false
  vars_files:
    - cfg/secrets_{{sysctx_instance_name}}.yml

  vars:
    rhacm_managed_cluster_name: "stormshift-{{layer3_ocp_name}}"
    rhacm_managed_cluster_url: "https://api.{{layer3_ocp_name}}.{{sysctx_dns_domain}}:6443"
    rhacm_managed_cluster_admin_user: "admin"
    rhacm_managed_cluster_admin_pswd: "{{secret_password}}"
    rhacm_hub_cluster_url: "https://api.mmgt.{{sysctx_dns_domain}}:6443"
    rhacm_hub_cluster_admin_user: "admin"
    rhacm_hub_cluster_admin_pswd: "{{secret_password}}"

  tasks:

# ---------- Chapter 9.2.3 of docs: prepare for import -------------
# step 1:
  - name: "Login to hub cluster"
    command: "oc login -u {{rhacm_hub_cluster_admin_user}} -p {{rhacm_hub_cluster_admin_pswd}} --server={{rhacm_hub_cluster_url}} --insecure-skip-tls-verify"
    changed_when: false

# step 2:
  - name: Create namespace for the managed cluster in the hub cluster
    k8s:
      state: present
      definition:
        kind: Namespace
        apiVersion: v1
        metadata:
          name: "{{rhacm_managed_cluster_name}}"
          labels:
            cluster.open-cluster-management.io/managedCluster: "{{rhacm_managed_cluster_name}}"
# steps 3,4,5:
  - name: Create managed cluster object in the hub cluster
    k8s:
      state: present
      definition:
        kind: ManagedCluster
        apiVersion: cluster.open-cluster-management.io/v1
        metadata:
          name: "{{rhacm_managed_cluster_name}}"
        spec:
          hubAcceptsClient: true

# steps 6,7,8:
  - name: Create klusterlet addon configuration
    k8s:
      state: present
      definition:
        apiVersion: agent.open-cluster-management.io/v1
        kind: KlusterletAddonConfig
        metadata:
          name: "{{rhacm_managed_cluster_name}}"
          namespace: "{{rhacm_managed_cluster_name}}"
        spec:
          clusterName: "{{rhacm_managed_cluster_name}}"
          clusterNamespace: "{{rhacm_managed_cluster_name}}"
          applicationManager:
            enabled: true
          certPolicyController:
            enabled: true
          clusterLabels:
            cloud: auto-detect
            vendor: auto-detect
          iamPolicyController:
            enabled: true
          policyController:
            enabled: true
          searchCollector:
            enabled: true
          version: 2.1.0


# ---------- Chapter 9.2.4 of docs: importing the klusterlet  -------------

# step 1
  - name: "Obtain klusterlet-crd yaml"
    shell: "oc get secret {{rhacm_managed_cluster_name}}-import -n {{rhacm_managed_cluster_name}} -o jsonpath={.data.crds\\\\.yaml} | base64 --decode >/tmp/klusterlet-crd.yaml"
    changed_when: false


# step 2
  - name: "Obtain import yaml"
    shell: "oc get secret {{rhacm_managed_cluster_name}}-import -n {{rhacm_managed_cluster_name}} -o jsonpath={.data.import\\\\.yaml} | base64 --decode >/tmp/import.yaml"
    changed_when: false


# step 3:
  - name: "Login to managed cluster"
    command: "oc login -u {{rhacm_managed_cluster_admin_user}} -p {{rhacm_managed_cluster_admin_pswd}} --server={{rhacm_managed_cluster_url}} --insecure-skip-tls-verify"
    changed_when: false

# step 4:
  - name: "Apply CRDs to managed cluster"
    command: "oc apply -f /tmp/klusterlet-crd.yaml"

# step 5:
  - name: "Apply import to managed cluster"
    command: "oc apply -f /tmp/import.yaml"
