---
- name: Preparing Hosts for OpenShift
  hosts: "{{layer3_ocp_name}}"
  vars_files:
    - cfg/secrets_{{sysctx_instance_name}}.yml
    - cfg/stormshift.yml


# This implements
# https://docs.openshift.com/container-platform/3.11/install/host_preparation.html
  tasks:
# Ensure Host Access:
# is done in ocp1_create_nodes by copying private hailstorm ssh key to Bastion
# the corresponding pub key is contained in the vm template as authorized_key,
# thus access is granted. Nothing to do for that.
# Setting proxy overrides: n/a - no proxy
# Registering hosts: n/a - vm image is already registered
    - name: Unregister from Red Hat Subscription Manager
      tags: rhsm,slow,fixme
      redhat_subscription:
        state: absent
      register: rhsmunregister

    - name: Clean Subscription Manager
      tags: rhsm,slow,fixme
      shell: subscription-manager clean
#      when: rhsmunregister is changed


    - name: Register with Red Hat Subscription Manager
      tags: rhsm,slow
      redhat_subscription:
        state: present
        username: "{{ sysctx_rhsm_user}}"
        password: "{{ sysctx_rhsm_pswd}}"
        pool_ids: "{{ sysctx_rhsm_poolid_virt}}"


    - name: Disable all Repos
      tags: repos,slow,fixme
      rhsm_repository:
        name: '*'
        state: disabled

    - name: Enable Required Repos
      tags: repos,slow
      rhsm_repository:
        name:
          - rhel-7-server-rpms
          - rhel-7-server-extras-rpms
          - rhel-7-server-ose-3.11-rpms
          - rhel-7-server-ansible-2.6-rpms
          - rh-gluster-3-client-for-rhel-7-server-rpms
        state: enabled

    - name: Install base packages (Coffee Time)
      tags: packages,slow
      yum:
        state: present
        name: wget, git, net-tools, bind-utils, yum-utils, iptables-services, bridge-utils, bash-completion, kexec-tools, sos, psacct, lvm2, glusterfs-fuse, openshift-ansible

    - name: Updating all packages to latest
      tags: packages,slow
      yum:
        name: '*'
        state: latest
      register: yumupdate

    - name: Adjust vm.max_map_count for istio deployments using sysctl
      tags: istioprep,sysctl
      lineinfile:
        path: /etc/sysctl.d/99-elasticsearch.conf
        line: vm.max_map_count = 262144
        create: true
      register: sysctl


    - block:
      - name: Reboot ocp nodes
        tags: packages,slow
        reboot:
        when: '"bastion" not in ansible_hostname'

      - name: Reboot bastion node
        tags: packages,slow
        reboot:
        when: '"bastion" in ansible_hostname'
      when: yumupdate is changed or sysctl is changed


    - name: Install docker
      tags: docker,slow
      yum:
        name: docker-1.13.1, docker-novolume-plugin
        state: latest

    - name: Distribute red hat root ca cert
      tags: rootca
      copy:
        src: "{{sysctx_certs_path}}redhat-pki-ca-chain.crt"
        dest: "/etc/pki/ca-trust/source/anchors/"
      register: cacerts
      when: sysctx_certs_path is defined

    - block:
      - name: Enable update-ca-trust
        tags: rootca
        command: /usr/bin/update-ca-trust enable
      - name:  Extract root ca certs
        tags: rootca
        command: /usr/bin/update-ca-trust extract
      when: cacerts is changed

    - name: Limit logfile size systemd-journald
      tags: journald
      lineinfile:
        path: /etc/systemd/journald.conf
        line: SystemMaxUse=2G
      register: journald

    - name: restart journald
      tags: journald
      service:
        name: systemd-journald
        state: restarted
      when: journald is changed

# Obsolete?
#    - name: cfg/stormshifture Docker Storage
#      tags: docker
#      template:
#        src: templates/docker-storage-setup.j2
#        dest: /etc/syscfg/stormshift/docker-storage-setup

# Obsolete?
#    - name: Setup Docker Storage
#      tags: docker
#      shell: docker-storage-setup
#      register: dss_result
#      changed_when: "dss_result.stderr is not search('Found an already cfg/stormshiftured thin pool')"

# Obsolete?
#    - name: Adding docker-novolume-plugin to docker options
#      tags: docker
#      replace:
#        backup: yes
#        path: /etc/syscfg/stormshift/docker
#        regexp: "^(OPTIONS=(?!.*docker-novolume-plugin).*)\u0027$"
#        replace: "\\1 --authorization-plugin=docker-novolume-plugin\u0027"

# Obsolete?
#    - name: Starting docker-no-volume plugin
#      tags: docker
#      service:
#        name: docker-novolume-plugin
#        enabled: yes
#        state: started

#    - name: Starting docker
#      tags: docker
#      service:
#        name: docker
#        enabled: yes
#        state: started

- name: Copy stormshift server cert to bastion
  hosts: "{{layer3_ocp_name}}bastion"
  vars_files:
    - cfg/secrets_{{sysctx_instance_name}}.yml
    - cfg/stormshift.yml
  tasks:
    - name: Copy stormshift server cert to bastion
      tags: certs
      copy:
        src: "{{sysctx_certs_path}}"
        dest: "/root/certs/"
      when: sysctx_certs_path is defined


- name: Install SSA Standard Template Construct on Bastion
  hosts: "{{layer3_ocp_name}}bastion"
  vars_files:
    - cfg/secrets_{{sysctx_instance_name}}.yml
    - cfg/stormshift.yml
  tasks:
    - name: git clone stc
      tags: stc
      git:
        repo: "https://github.com/RedHat-EMEA-SSA-Team/stc.git"
        dest: /root/stc-git

#    - name: Download STC
#      tags: stc
#      get_url:
#        url: https://github.com/RedHat-EMEA-SSA-Team/stc/archive/latest.tar.gz
#        dest: /root/stc.tgz

#    - name: Extract STC
#      tags: stc
#      unarchive:
#        remote_src: yes
#        src: /root/stc.tgz
#        dest: /root
#        keep_newer: yes

    - name: Provide Environment for STC
      tags: stc
      template:
        src: "templates/stc_env_{{layer3_ocp_name}}.yml.j2"
        dest: /root/stc-git/env.yml
