---
- name: Include pre-destroy-features
  ansible.builtin.include_role:
    name: "feature-{{ item }}"
    tasks_from: pre-destroy-hcp.yaml
  with_items: "{{ stormshift_cluster_features | default([]) }}"

- name: Delete cluster authentfication in Vault
  community.hashi_vault.vault_kv2_delete:
    url: "{{ lookup('ansible.builtin.env', 'RH_VAULT_URL' ) }}"
    auth_method: approle
    role_id: "{{ lookup('ansible.builtin.env', 'RH_VAULT_ROLE_ID' ) }}"
    secret_id: "{{ lookup('ansible.builtin.env', 'RH_VAULT_SECRET_ID' ) }}"
    ca_cert: "{{ lookup('ansible.builtin.env', 'RH_VAULT_CA_CERT_FILENAME' ) }}"
    engine_mount_point: apps

    path: "coe-lab/cluster-credential/stormshift-{{ inventory_hostname }}"

- name: Delete cluster authentfication in AAP
  awx.awx.credential:
    name: "{{ inventory_hostname }}"
    organization: stormshift
    state: absent
    credential_type: "OpenShift Cluster v1"

- name: Destroy managed cluster
  kubernetes.core.k8s:
    api_key:         "{{ hostvars['isar']['k8s_auth_api_key'] }}"
    host:            "{{ hostvars['isar']['k8s_auth_host'] }}"
    validate_certs:  "{{ hostvars['isar']['k8s_auth_verify_ssl'] }}"

    state: absent
    definition:
      apiVersion: cluster.open-cluster-management.io/v1
      kind: ManagedCluster
      metadata:
        name: "{{ inventory_hostname }}"

- name: Destroy hosted control plane
  kubernetes.core.k8s:
    api_key:         "{{ hostvars['isar']['k8s_auth_api_key'] }}"
    host:            "{{ hostvars['isar']['k8s_auth_host'] }}"
    validate_certs:  "{{ hostvars['isar']['k8s_auth_verify_ssl'] }}"

    state: absent
    definition:
      apiVersion: hypershift.openshift.io/v1beta1
      kind: HostedCluster
      metadata:
        name: "{{ inventory_hostname }}"
        namespace: stormshift

- name: Delete node pool
  kubernetes.core.k8s:
    api_key:         "{{ hostvars['isar']['k8s_auth_api_key'] }}"
    host:            "{{ hostvars['isar']['k8s_auth_host'] }}"
    validate_certs:  "{{ hostvars['isar']['k8s_auth_verify_ssl'] }}"

    state: absent
    definition:
      apiVersion: hypershift.openshift.io/v1beta1
      kind: NodePool
      metadata:
        name: "{{ inventory_hostname }}-nodepool1"
        namespace: stormshift

- name: "Wait of: Destroy managed cluster"
  kubernetes.core.k8s:
    api_key:         "{{ hostvars['isar']['k8s_auth_api_key'] }}"
    host:            "{{ hostvars['isar']['k8s_auth_host'] }}"
    validate_certs:  "{{ hostvars['isar']['k8s_auth_verify_ssl'] }}"

    wait: true 
    wait_sleep: 10
    wait_timeout: 1200

    state: absent
    definition:
      apiVersion: cluster.open-cluster-management.io/v1
      kind: ManagedCluster
      metadata:
        name: "{{ inventory_hostname }}"

- name: "Wait of: Destroy hosted control plane"
  kubernetes.core.k8s:
    api_key:         "{{ hostvars['isar']['k8s_auth_api_key'] }}"
    host:            "{{ hostvars['isar']['k8s_auth_host'] }}"
    validate_certs:  "{{ hostvars['isar']['k8s_auth_verify_ssl'] }}"

    wait: true 
    wait_sleep: 10
    wait_timeout: 600

    state: absent
    definition:
      apiVersion: hypershift.openshift.io/v1beta1
      kind: HostedCluster
      metadata:
        name: "{{ inventory_hostname }}"
        namespace: stormshift

- name: "Wait of: Delete node pool"
  kubernetes.core.k8s:
    api_key:         "{{ hostvars['isar']['k8s_auth_api_key'] }}"
    host:            "{{ hostvars['isar']['k8s_auth_host'] }}"
    validate_certs:  "{{ hostvars['isar']['k8s_auth_verify_ssl'] }}"

    wait: true 
    wait_sleep: 10
    wait_timeout: 600

    state: absent
    definition:
      apiVersion: hypershift.openshift.io/v1beta1
      kind: NodePool
      metadata:
        name: "{{ inventory_hostname }}-nodepool1"
        namespace: stormshift

- name: Delete secrets
  with_items:
    - "{{ inventory_hostname }}-pull-secret"
    - "{{ inventory_hostname }}-etcd-encryption-key"
    - "{{ inventory_hostname }}-admin-kubeconfig"
    - "{{ inventory_hostname }}-kubeadmin-password"
    - "{{ inventory_hostname }}-ssh-key"
    
  kubernetes.core.k8s:
    api_key:         "{{ hostvars['isar']['k8s_auth_api_key'] }}"
    host:            "{{ hostvars['isar']['k8s_auth_host'] }}"
    validate_certs:  "{{ hostvars['isar']['k8s_auth_verify_ssl'] }}"

    state: absent
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ item }}"
        namespace: stormshift

- name: Delete project
  redhat.openshift.k8s:
    api_key:         "{{ hostvars['isar']['k8s_auth_api_key'] }}"
    host:            "{{ hostvars['isar']['k8s_auth_host'] }}"
    validate_certs:  "{{ hostvars['isar']['k8s_auth_verify_ssl'] }}"

    wait: true 
    wait_sleep: 10
    wait_timeout: 600

    state: absent
    definition:
      kind: Project
      apiVersion: project.openshift.io/v1
      metadata:
        name: "stormshift-{{ inventory_hostname }}"