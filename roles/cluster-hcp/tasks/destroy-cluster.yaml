---

- name: Delete cluster authentfication in Vault
  community.hashi_vault.vault_kv2_delete:
    url: "{{ lookup('ansible.builtin.env', 'RH_VAULT_URL' ) }}"
    auth_method: approle
    role_id: "{{ lookup('ansible.builtin.env', 'RH_VAULT_ROLE_ID' ) }}"
    secret_id: "{{ lookup('ansible.builtin.env', 'RH_VAULT_SECRET_ID' ) }}"
    ca_cert: "{{ lookup('ansible.builtin.env', 'RH_VAULT_CA_CERT_FILENAME' ) }}"
    engine_mount_point: apps

    path: "coe-lab/cluster-credential/stormshift-{{ inventory_hostname }}"

- name: Delete cluster authentfication in AAP
  awx.awx.credential:
    name: "{{ inventory_hostname }}"
    organization: stormshift
    state: absent
    credential_type: "OpenShift Cluster v1"

- name: Predict oauth url
  ansible.builtin.set_fact:
    oauth_hostname: "oauth-stormshift-{{ inventory_hostname  }}.apps.isar.coe.muc.redhat.com"

- name: Destroy clients
  with_items:
    - coe-sso
    - coe-sso-admin
  community.general.keycloak_client:
    validate_certs: false
    auth_keycloak_url: https://sso.coe.muc.redhat.com
    auth_realm: master
    auth_username: admin
    auth_password: "{{ sso_admin_pw }}"

    realm: "{{ item }}"
    client_id: "{{ oauth_hostname }}"
    name: "{{ oauth_hostname }}"
    state: absent

  delegate_to: localhost

- name: Create clientSecret k8s secret
  kubernetes.core.k8s:
    api_key:         "{{ hostvars['isar']['k8s_auth_api_key'] }}"
    host:            "{{ hostvars['isar']['k8s_auth_host'] }}"
    validate_certs:  "{{ hostvars['isar']['k8s_auth_verify_ssl'] }}"

    state: absent
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: "{{ inventory_hostname }}-openid-client-secret-coe-sso"
        namespace: "stormshift"

- name: Destroy hosted control plane
  kubernetes.core.k8s:
    api_key:         "{{ hostvars['isar']['k8s_auth_api_key'] }}"
    host:            "{{ hostvars['isar']['k8s_auth_host'] }}"
    validate_certs:  "{{ hostvars['isar']['k8s_auth_verify_ssl'] }}"

    state: absent
    definition:
      apiVersion: hypershift.openshift.io/v1beta1
      kind: HostedCluster
      metadata:
        name: "stormshift-{{ inventory_hostname }}"
        namespace: stormshift

- name: Delete node pool
  kubernetes.core.k8s:
    api_key:         "{{ hostvars['isar']['k8s_auth_api_key'] }}"
    host:            "{{ hostvars['isar']['k8s_auth_host'] }}"
    validate_certs:  "{{ hostvars['isar']['k8s_auth_verify_ssl'] }}"

    state: absent
    definition:
      apiVersion: hypershift.openshift.io/v1beta1
      kind: NodePool
      metadata:
        name: "{{ inventory_hostname }}-nodepool1"
        namespace: stormshift

