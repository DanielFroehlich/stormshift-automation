# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
- name: Install MicroShift RPM
  hosts: "{{layer3_name}}"
  gather_facts: false
  vars_files:
    - cfg/secrets_{{sysctx_instance_name}}.yml
  tasks:
    - name: Set hostname
      tags: hostname
      hostname:
        name: "{{layer3_name}}.{{ sysctx_dns_domain }}"

    - name: Register with Red Hat Subscription Manager
      tags: rhsm,slow
      redhat_subscription:
        state: present
        username: "{{ sysctx_rhsm_user}}"
        password: "{{ sysctx_rhsm_pswd}}"
        force_register: true
# Not needed with simple content access activated:
#        pool_ids: "{{ sysctx_rhsm_poolid_virt}}"


    - name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
      tags: swap
      changed_when: false
      shell: |
        swapoff -a

    - name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
      tags: swap
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s.*)$'
        replace: '#\1'

#
# RHEL 92 todo:  work around
# Devices file sys_serial 213e7b6b-8441-44d0-ae26-3df55bab3844 PVID MDHwM81ex62inauoWm3U415rXNZCQigI last seen on /dev/sda2 not found.
# by:
#While awaiting a fix this can be bypassed by setting use_devicesfile=0 inside of /etc/lvm/lvm.conf

    - name: Workaround Devices files not found by changing LVM Configure
      tags: lvmcfg
      replace:
        path: /etc/lvm/lvm.conf
        regexp: '# use_devicesfile = 1'
        replace: 'use_devicesfile = 0'

    - name: Enable Repos
      tags: rhsm, repos, slow
      when: rhsm_repo_list is defined
      rhsm_repository:
        state: enabled
        name: "{{rhsm_repo_list}}"

    - name: Prepare for candidate Repos
#      when: dev_preview_version is defined
      tags: repos
      template:
        src: templates/microshift-candidate.repo
        dest: /etc/yum.repos.d/microshift-candidate.repo

    - name: Update baseos
      tags: upd, slow
      when: layer4_update_os_to_latest
      yum:
        name: '*'
        state: latest
      register: osupdate

    - name: Reboot after os update
      tags: upd,slow
      reboot:
      when: layer4_update_os_to_latest and osupdate is changed

# TODO: Check/Verify that LVM VG "RHEL" existis and has >1G free capacity

    - name: Install oc client and cockpit (not needed, demo purposes only)
      tags: prep,rpm
      yum:
        name:
          - openshift-clients
          - cockpit
        state: present

    - name: Enable and start cockpit
      tags: prep
      service:
        name: cockpit.socket
        enabled: yes
        state: started

    - name: Add typical commands to bash history
      tags: prep, bash
      blockinfile:
        path: /root/.bash_history
        create: true
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{layer3_name}}"
        block: "{{ lookup('template', 'templates/microshift-bash-history-suggestions.j2') }}"


    - name: Create crio dir
      tags: prep,crio
      file:
        path: /etc/crio
        state: directory

    - name: Provide pull secrets
      tags: prep,crio
      copy:
        content: "{{sysctx_pull_secret}}"
        dest: /etc/crio/openshift-pull-secret
        mode: 600
        owner: root
        group: root

    - name: Create kube dir
      tags: prep,ushift
      file:
        path: /root/.kube
        state: directory
        owner: root
        group: root

    - name: Create ushift dir
      tags: prep,ushift
      file:
        path: /etc/microshift
        state: directory
        owner: root
        group: root

    - name: Create LVM thin pool
      tags: prep,ushift,storage
      lvol:
        vg: rhel
        lv: thin
        size: 16G
        opts: --thin

    - name: Provide MicroShift config file
      tags: prep,ushift
      template:
        src: templates/microshift-config.yaml.j2
        dest: /etc/microshift/config.yaml

    - name: Provide lvmd config file
      tags: prep,ushift
      template:
        src: templates/microshift-lvmd.yaml.j2
        dest: /etc/microshift/lvmd.yaml


    - name: Firewall add cluster network to trusted zone
      tags: prep, firewall
      firewalld:
        immediate: yes
        permanent: yes
        zone: trusted
        source: 10.42.0.0/16
        state: enabled

    - name: Firewall add DNS to trusted zone
      tags: prep, firewall
      firewalld:
        immediate: yes
        permanent: yes
        zone: trusted
        source: 169.254.169.1
        state: enabled

    - name: Firewall open API port for external access
      tags: prep, firewall
      firewalld:
        immediate: yes
        permanent: yes
        port: 6443/tcp
        state: enabled

    - name: Firewall open cockpit port for external access
      tags: prep, firewall
      firewalld:
        immediate: yes
        permanent: yes
        port: 9090/tcp
        state: enabled

    - name: Install MicroShift
      when: actually_install
      tags: install, slow
      yum:
        name: 'microshift'
        state: present
      register: install

    - name: Enable and start MicroShift
      when: actually_install
      tags: install, slow
      service:
        name: microshift
        enabled: yes
        state: started

    - name: Copy kubeconfig to root user on VM
      when: actually_install
      tags: install, post
      copy:
        src: /var/lib/microshift/resources/kubeadmin/{{layer3_name}}.{{ sysctx_dns_domain }}/kubeconfig
        remote_src: true
        dest: /root/.kube/config
        mode: 600

    - name: Fetch kubeconfig from VM to deploy node
      when: actually_install
      tags: install, post
      fetch:
        src: /root/.kube/config
        dest: "/root/{{layer3_name}}_install/kubeconfig"
        flat: true

    - name: Deploy VolumeSnapshotClass
      tags: post,vsc
      when: actually_install
      delegate_to: 127.0.0.1
      kubernetes.core.k8s:
        kubeconfig: "/root/{{layer3_name}}_install/kubeconfig"
        validate_certs: false
        state: present
        definition: "{{ lookup('template', 'templates/microshift-volumeSnapShotClass.yaml.j2') }}"

    - name: Prepare VolumeSnapshotClass
      tags: post,vsc
      template:
        src: templates/microshift-volumeSnapShotClass.yaml.j2
        dest: /root/volumeSnapshotClass.yaml

    - name: Deploy sample workload
      tags: post,sample
      when: actually_install and deploy_sample_workload
      delegate_to: 127.0.0.1
      kubernetes.core.k8s:
        kubeconfig: "/root/{{layer3_name}}_install/kubeconfig"
        validate_certs: false
        state: present
        definition: "{{ lookup('template', 'templates/microshift-sample-app.yaml.j2') }}"

    - name: Prepare demos
      tags: post,sample
      template:
        src: templates/{{item}}
        dest: /root/{{item}}
      loop:
        - microshift-sample-app.yaml
        - microshift-olm-demo.yaml
        - microshift-gitops-demo.yaml
        - microshift-sample-volumeSnapshot.yaml
